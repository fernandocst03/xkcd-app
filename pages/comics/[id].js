import Head from 'next/head'
import Image from "next/image"
import Link from "next/link"
import Header from "../../components/Header";
import fs from "fs/promises"
import { readFile, stat } from "fs/promises"
import { basename } from 'path';
import Footer from '../../components/Footer';

export default function Comic({ id, img, alt, title, nextId, prevId, hasNext, hasPrevius }) {
   return (
      <>
         <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <Header />
         <main style={{
            width: '100%',
            display: 'grid',
            placeItems: 'center',
            minHeight: "100vh",
         }}>
            <section
               style={{
                  width: '30%',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  minHeight: "100vh",
                  gap: "20px",
                  marginTop: "50px",
               }}>
               <h4>{title}</h4>
               <Image
                  src={img}
                  alt={alt}
                  width="400"
                  height="400"
               >
               </Image>
               <p>{alt}</p>
               <p>{id}</p>
               <div
                  style={{
                     marginTop: "50px",
                     width: "100%",
                     display: 'flex',
                     flexDirection: 'row',
                     justifyContent: 'center',
                     alignItems: 'center',
                     gap: "200px",
                  }}>
                  {hasPrevius && <Link href={`/comics/${prevId}`}> ðŸ‘ˆ Previus </Link>}
                  {hasNext && <Link href={`/comics/${nextId}`}>Next ðŸ‘‰</Link>}
               </div>
            </section>
         </main>
         <Footer/>
      </>
   )
}

export async function getStaticPaths() {
   const files = await fs.readdir("./comics")
   const paths = files.map(file => {
      const id = basename(file, ".json")
      return {
         params: {
            id: id,
         },
      }
   })

   return {
      paths,
      fallback: false
   }
}

export async function getStaticProps({ params }) {
   const { id } = params

   const content = await readFile(`./comics/${id}.json`, "utf8")
   const comic = JSON.parse(content)

   const idNumber = +id
   const nextId = idNumber + 1
   const prevId = idNumber - 1

   const [prevResult, nextResult] = await Promise.allSettled([
      stat(`./comics/${prevId}.json`),
      stat(`./comics/${nextId}.json`)
   ])
   const hasPrevius = prevResult.status === "fulfilled"
   const hasNext = nextResult.status === "fulfilled"

   return {
      props: {
         ...comic,
         hasPrevius,
         hasNext,
         prevId,
         nextId,
      }
   }
}
